{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Shubham - Cloud Formation template for creating VPC, Subnets, Internet Getway and Route tables",
	"Parameters": 
	{
	    "VPCCIDRblock":
            {
		"Type": "String",
		"Default": "172.31.0.0/16",
		"Description": "Enter CIDR range for creating a vpc."
		
	    },
	    "PublicSubnet1CIDR":
            {
		"Type": "String",
		"Default": "172.31.0.0/20",
		"Description": "Enter CIDR range for subnet 1."
		
	    },
	    "PublicSubnet2CIDR":
            {
		"Type": "String",
		"Default": "172.31.16.0/20",
		"Description": "Enter CIDR range for subnet 2."
		
	    },
	    "PublicSubnet3CIDR":
            {
		"Type": "String",
		"Default": "172.31.32.0/20",
		"Description": "Enter CIDR range for subnet 3."
		
	    },
	    "VPCName":
            {
		"Type": "String",
		"Default": "VPCName Passed as parameter",
		"Description": "Enter name for creating a vpc."
	    },
	    "AWSRegion":
            {
		"Type": "String",
		"Default": "us-east-1",
		"Description": "Enter AWS region for creating a vpc."
	    }

	},
	"Resources": 
	{
		"VPC" : 
		{
		   "Type" : "AWS::EC2::VPC",
		   "Properties" : 
			{
			      "CidrBlock" : {"Ref": "VPCCIDRblock"},
			      "EnableDnsSupport" : "false",
			      "EnableDnsHostnames" : "false",
			      "InstanceTenancy" : "default",
			      "Tags" : [ {"Key" : "Name", "Value" : {"Ref": "VPCName"}} ]
			}
		},
		"InternetGateway" : 
		{
		      "Type" : "AWS::EC2::InternetGateway",
		      "Properties" : 
			{
			        "Tags" : [ {"Key" : "Name", "Value" : "CloudFormation IG"}]
		        }
   		},
		"VPCGatewayAttachment" : 
		{
		   "Type" : "AWS::EC2::VPCGatewayAttachment",
		   "Properties" : 
		   {
		      "VpcId" : { "Ref" : "VPC" },
		      "InternetGatewayId" : { "Ref" : "InternetGateway" }
		   }
		},
		"Subnet1" : 
		{
		   "Type" : "AWS::EC2::Subnet",
		   "Properties" : 
		   {
		      "VpcId" : { "Ref" : "VPC" },
		      "CidrBlock" : { "Ref" : "PublicSubnet1CIDR" },
		      "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
		      "MapPublicIpOnLaunch" : "true",	
		      "Tags" : [ { "Key" : "Name", "Value" : "AZ-1" } ]
   		   }
		},
		"Subnet2" : 
		{
		   "Type" : "AWS::EC2::Subnet",
		   "Properties" : 
		   {
		      "VpcId" : { "Ref" : "VPC" },
		      "CidrBlock" : { "Ref" : "PublicSubnet2CIDR" },
		      "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
		      "MapPublicIpOnLaunch" : "true",	
		      "Tags" : [ { "Key" : "Name", "Value" : "AZ-2" } ]
   		   }
		},
		"Subnet3" : 
		{
		   "Type" : "AWS::EC2::Subnet",
		   "Properties" : 
		   {
		      "VpcId" : { "Ref" : "VPC" },
		      "CidrBlock" : { "Ref" : "PublicSubnet3CIDR" },
		      "AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] },
		      "MapPublicIpOnLaunch" : "true",	
		      "Tags" : [ { "Key" : "Name", "Value" : "Az-3" } ]
   		   }
		},
		"RouteTable" : 
		{
		   "Type" : "AWS::EC2::RouteTable",
		   "Properties" : 
		   {
		      "VpcId" : { "Ref" : "VPC" },
		      "Tags" : [ { "Key" : "Name", "Value" : "Route Table VPC" } ]
		   }
		},
		"InternetRoute" : 
		{
		   "Type" : "AWS::EC2::Route",
		   "DependsOn" : "VPCGatewayAttachment",
		   "Properties" : 
		   {
		      "RouteTableId" : { "Ref" : "RouteTable" },
		      "DestinationCidrBlock" : "0.0.0.0/0",
		      "GatewayId" : { "Ref" : "InternetGateway" }
		   }
		},
		"Subnet1RouteTableAssociation" : 
		{
		   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
		   "Properties" : 
		   {
		      "SubnetId" : { "Ref" : "Subnet1" },
		      "RouteTableId" : { "Ref" : "RouteTable" }
		   }
		},
		"Subnet2RouteTableAssociation" : 
		{
		   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
		   "Properties" : 
		   {
		      "SubnetId" : { "Ref" : "Subnet2" },
		      "RouteTableId" : { "Ref" : "RouteTable" }
		   }
		},
		"Subnet3RouteTableAssociation" : 
		{
		   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
		   "Properties" : 
		   {
		      "SubnetId" : { "Ref" : "Subnet3" },
		      "RouteTableId" : { "Ref" : "RouteTable" }
		   }
		}
	}
	
}
